{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\IMO349\\\\Desktop\\\\JS\\\\FINAL\\\\final-app\\\\src\\\\screens\\\\Store.js\";\nimport React from 'react';\nimport '../styles/Store.css';\nimport { Card } from '../components/card';\nimport { Empty } from '../components/empty';\nimport { items } from '../items';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Store extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n\n    this.handleClick = () => {\n      this.setState(prev => ({\n        count: prev.count + 1\n      }));\n    };\n\n    this.state = {\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      items: items\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid items-grid grid-container--fill\",\n      children: this.state.items.length ? this.state.items.map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n        item: item,\n        addToCart: () => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.h,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: this.state.count\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 94\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 69\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this)) : /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/IMO349/Desktop/JS/FINAL/final-app/src/screens/Store.js"],"names":["React","Card","Empty","items","Store","Component","constructor","props","state","count","handleClick","setState","prev","componentDidMount","render","length","map","item","index","h","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,SAAQC,IAAR,QAAmB,oBAAnB;AACA,SAAQC,KAAR,QAAoB,qBAApB;AACA,SAAQC,KAAR,QAAoB,UAApB;;AAEA,eAAe,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAAmC;AAC9CC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AADc,SAWlBC,KAXkB,GAWV;AACJC,MAAAA,KAAK,EAAE;AADH,KAXU;;AAAA,SAelBC,WAfkB,GAeJ,MAAM;AAChB,WAAKC,QAAL,CAAcC,IAAI,KAAK;AAACH,QAAAA,KAAK,EAAEG,IAAI,CAACH,KAAL,GAAa;AAArB,OAAL,CAAlB;AACH,KAjBiB;;AAEd,SAAKD,KAAL,GAAa;AACTL,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAEDU,EAAAA,iBAAiB,GAAE;AACf,SAAKF,QAAL,CAAc;AAACR,MAAAA,KAAK,EAAEA;AAAR,KAAd;AACH;;AAWDW,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,sCAAf;AAAA,gBACK,KAAKN,KAAL,CAAWL,KAAX,CAAiBY,MAAjB,GAA0B,KAAKP,KAAL,CAAWL,KAAX,CAAiBa,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBAC5C,QAAC,IAAD;AAAoB,QAAA,IAAI,EAAED,IAA1B;AAAgC,QAAA,SAAS,EAAE,mBAAK;AAAQ,UAAA,OAAO,EAAE,KAAKE,CAAtB;AAAA,iCAAyB;AAAA,sBAAM,KAAKX,KAAL,CAAWC;AAAjB;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA;AAAhD,SAAWQ,IAAI,CAACG,EAAhB;AAAA;AAAA;AAAA;AAAA,cADuB,CAA1B,gBAEG,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,YADJ;AAOH;;AA7B6C","sourcesContent":["import React from 'react';\nimport '../styles/Store.css'\nimport {Card} from '../components/card'\nimport {Empty} from '../components/empty'\nimport {items} from '../items'\n\nexport default class Store extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            items: []\n        }\n    }\n\n    componentDidMount(){\n        this.setState({items: items})\n    }\n\n    state = {\n        count: 0\n    };\n\n    handleClick = () => {\n        this.setState(prev => ({count: prev.count + 1}));\n    }\n\n\n    render(){\n        return (\n            <div className=\"grid items-grid grid-container--fill\">\n                {this.state.items.length ? this.state.items.map((item, index)=>(\n                    <Card key={item.id} item={item} addToCart={()=> <button onClick={this.h}><div>{this.state.count}</div></button> }/>\n                )): <Empty/>}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}